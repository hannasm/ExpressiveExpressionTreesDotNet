<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C94F7405-71F8-423A-BF55-FF98C83A0150}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ExpressiveExpressionTrees.Tests</RootNamespace>
    <AssemblyName>ExpressiveExpressionTrees.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Earlier|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Earlier\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="CompareExpressionBaseTests\CompareBinaryBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareBindingsBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareExpressionTestBase.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareConditionalBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareConstantBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareDefaultBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareInvocationBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareLambdaBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareListInitBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareMemberAccessBaseTests.cs" />
    <Compile Include="ExpressionComparerTests\BinaryExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\BindingsExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\ConditionalExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\ConstantExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\DefaultExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\InvocationExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\LambdaExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\ListInitExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\MemberAccessExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\MethodCallExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\NewArrayExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\NewExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\NullExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\ParameterExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\TypeBinaryExpressionComparerTests.cs" />
    <Compile Include="ExpressionComparerTests\UnaryExpressionComparerTests.cs" />
    <Compile Include="ExpressionGenerator.MakeBinary.Tests.cs" />
    <Compile Include="ExpressionGenerator.MultiProject.Tests.cs" />
    <Compile Include="ExpressionHasherTests\BinaryExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\BindingsExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\ConditionalExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\ConstantExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\DefaultExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\InvocationExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\LambdaExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\ListInitExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\MemberAccessExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\MethodCallExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\NewArrayExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\NewExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\NullExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\ParameterExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\TypeBinaryExpressionComparerTests.cs" />
    <Compile Include="ExpressionHasherTests\UnaryExpressionComparerTests.cs" />
    <Compile Include="ExpressionReplacerTests\ExpressionReplacerUseCases.cs" />
    <Compile Include="ExpressionVisitorTest\MemberInitVisitorTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareMethodCallBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareNewArrayBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareNewBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareNullBasetests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareParameterBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareTypeBinaryBaseTests.cs" />
    <Compile Include="CompareExpressionBaseTests\CompareUnaryBaseTests.cs" />
    <Compile Include="ExpressionGenerator.FromAction.Tests.cs" />
    <Compile Include="ExpressionGenerator.FromFunc.Tests.cs" />
    <Compile Include="ExpressionGenerator.Tests.cs" />
    <Compile Include="ExpressionReader.Tests.cs" />
    <Compile Include="ExpressionVisitorTest\BinaryVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\BlockVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\ConditionalVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\ConstantVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\ExpressionVisitorVerifierTool.cs" />
    <Compile Include="ExpressionVisitorTest\IndexerVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\InvokeVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\LambdaVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\ListInitVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\MemberAccessVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\MethodCallVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\NewArrayVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\NewVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\TypeBinaryVisitorTests.cs" />
    <Compile Include="ExpressionVisitorTest\UnaryVisitorTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ExpressionFinderTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ExpressiveExpressionTrees\ExpressiveExpressionTrees.csproj">
      <Project>{7c2f25ad-b298-46f0-aefe-ef9a5a189daa}</Project>
      <Name>ExpressiveExpressionTrees</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>